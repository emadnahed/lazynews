{"ast":null,"code":"var _jsxFileName = \"/Users/emaad/Desktop/lazynews/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Card from \"./Components/Card\";\nimport './App.css';\nimport Header from \"./Components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [NewsData, setNewsData] = React.useState([]);\n  const [darkMode, setDarkMode] = React.useState(false);\n  const [formData, setFormData] = React.useState({\n    selectedNews: \"all\"\n  });\n  console.log(document.getElementsByName(body));\n  function handleChange(event) {\n    const {\n      value\n    } = event.target;\n    setFormData(prevFormData => {\n      return {\n        selectedNews: value\n      };\n    });\n  }\n\n  // side effects\n  React.useEffect(function () {\n    fetch(`https://inshorts.deta.dev/news?category=${formData.selectedNews}`).then(res => res.json()).then(data => setNewsData(data.data));\n  }, [formData.selectedNews]);\n  function toggleDarkMode() {\n    setDarkMode(prevMode => !prevMode);\n  }\n  let currentMode = darkMode ? \"dark\" : \"white\";\n  let combination = `\"all\" ${currentMode}`;\n  const CardElements = NewsData.map(news => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card\",\n      currentMode: currentMode,\n      Author: news.author,\n      NewsTitle: news.title,\n      NewsContent: news.content,\n      RMore: news.readMoreUrl,\n      url: news.url,\n      NewsDate: news.date.slice(0, 11),\n      NewsImage: news.imageUrl,\n      NewsTime: news.time\n    }, news.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 55\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: combination,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      darkMode: darkMode,\n      toggleDarkMode: toggleDarkMode,\n      currentMode: currentMode,\n      handleChange: handleChange,\n      selectedNews: formData.selectedNews\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dea\",\n      children: CardElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"bE7wHO8DrPTcKtNzj8+RzoOnBw8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Card","Header","jsxDEV","_jsxDEV","App","_s","NewsData","setNewsData","useState","darkMode","setDarkMode","formData","setFormData","selectedNews","console","log","document","getElementsByName","body","handleChange","event","value","target","prevFormData","useEffect","fetch","then","res","json","data","toggleDarkMode","prevMode","currentMode","combination","CardElements","map","news","className","Author","author","NewsTitle","title","NewsContent","content","RMore","readMoreUrl","url","NewsDate","date","slice","NewsImage","imageUrl","NewsTime","time","id","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/emaad/Desktop/lazynews/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Card from \"./Components/Card\"\nimport './App.css';\nimport Header from \"./Components/Header\";\n\n\n\n\nexport default function App() {\n    const [NewsData, setNewsData] = React.useState([])\n    const [darkMode, setDarkMode] = React.useState(false)\n    const [formData, setFormData] = React.useState(\n        {\n\n            selectedNews: \"all\"\n        }\n    )\n    \n\n    console.log(document.getElementsByName(body))\n\n    function handleChange(event) {   \n        const {value} = event.target\n        setFormData(prevFormData => {\n            return {\n                selectedNews: value\n            }\n        })\n    }\n        \n    // side effects\n    React.useEffect(function() {\n        fetch(`https://inshorts.deta.dev/news?category=${formData.selectedNews}`)\n            .then(res => res.json())\n            .then(data => setNewsData(data.data))\n    }, [formData.selectedNews])\n    \n    function toggleDarkMode() {\n        setDarkMode(prevMode => !prevMode)\n    }\n    \n    let currentMode = darkMode ? \"dark\": \"white\"\n    let combination = `\"all\" ${currentMode}`\n    \n    \n    \n\n    const CardElements = NewsData.map(news => {return <Card  \n                                                className=\"card\"\n                                                key={news.id} \n                                                currentMode={currentMode}\n                                                Author={news.author} \n                                                NewsTitle={news.title} \n                                                NewsContent={news.content} \n                                                RMore={news.readMoreUrl} \n                                                url={news.url}\n                                                NewsDate={news.date.slice(0,11)} \n                                                NewsImage={news.imageUrl}\n                                                NewsTime={news.time}\n                                                />}\n                                                )\n    \n    \n    \n    return (\n        <div className={combination}>\n            <Header \n                darkMode={darkMode} \n                toggleDarkMode={toggleDarkMode}\n                currentMode={currentMode}\n                handleChange={handleChange}\n                selectedNews = {formData.selectedNews}\n            />\n\n            <main className=\"dea\">\n            {CardElements}\n            </main>                              \n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}